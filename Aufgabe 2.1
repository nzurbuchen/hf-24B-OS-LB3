#define _GNU_SOURCE
#include <fcntl.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/time.h>

#define BUFFER_SIZE 4096

int main(int argc, char *argv[]) {
    if (argc != 3) {
        printf("Usage: %s <source_file> <destination_file>\n", argv[0]);
        exit(EXIT_FAILURE);
    }

    const char *source = argv[1];
    const char *dest = argv[2];

    int src_fd = open(source, O_RDONLY);
    if (src_fd < 0) {
        perror("Fehler beim Öffnen der Quelldatei");
        exit(EXIT_FAILURE);
    }

    int dest_fd = open(dest, O_WRONLY | O_CREAT | O_TRUNC, 0644);
    if (dest_fd < 0) {
        perror("Fehler beim Erstellen der Zieldatei");
        close(src_fd);
        exit(EXIT_FAILURE);
    }

    char buffer[BUFFER_SIZE];
    ssize_t bytes_read, bytes_written;
    size_t total_bytes = 0;

    struct timeval start, end;
    gettimeofday(&start, NULL);

    while ((bytes_read = read(src_fd, buffer, BUFFER_SIZE)) > 0) {
        ssize_t written = 0;
        while (written < bytes_read) {
            bytes_written = write(dest_fd, buffer + written, bytes_read - written);
            if (bytes_written < 0) {
                perror("Fehler beim Schreiben in die Zieldatei");
                close(src_fd);
                close(dest_fd);
                exit(EXIT_FAILURE);
            }
            written += bytes_written;
        }
        total_bytes += bytes_read;
    }

    if (bytes_read < 0) {
        perror("Fehler beim Lesen der Quelldatei");
        close(src_fd);
        close(dest_fd);
        exit(EXIT_FAILURE);
    }

    gettimeofday(&end, NULL);

    close(src_fd);
    close(dest_fd);

    double elapsed = (end.tv_sec - start.tv_sec) + 
                     (end.tv_usec - start.tv_usec) / 1000000.0;

    printf("Datei erfolgreich kopiert.\n");
    printf("Kopierte Bytes: %zu\n", total_bytes);
    printf("Benötigte Zeit: %.6f Sekunden\n", elapsed);

    return 0;
}
